name: Create and publish a Docker image

concurrency:
  group: Server_deploy
  cancel-in-progress: true

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  REPOSITORY_NAME: Lubimovka_backend

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy-image-on-server:
    name: Deploy new docker image on server
    runs-on: ubuntu-latest
    environment:
      name: Server_deploy
    needs: build-and-push-image
    steps:
      -
        name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.CI_DEPLOY_HOST }}
          username: ${{ secrets.CI_DEPLOY_USERNAME }}
          key: ${{ secrets.CI_DEPLOY_SSH_PRIVATE_KEY }}
          script: |
            cd ${{ env.REPOSITORY_NAME }}/infra_deploy

            IMAGE_NAME=$(echo $IMAGE_NAME | tr '[A-Z]' '[a-z]')
            echo IMAGE_NAME=$IMAGE_NAME >> $GITHUB_ENV
            
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main

            docker-compose -f frontend_deploy.yaml -p frontend down
            docker-compose -f frontend_deploy.yaml -p frontend up -d